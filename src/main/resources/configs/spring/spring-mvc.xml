<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.3.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">

    <!--
        当前的配置文件只涉及：controller和view层的配置
    -->

    <!-- 1. 启用注解 -->
    <context:annotation-config/>


    <!-- 2. 注解的作用域 -->
    <context:component-scan base-package="com.acom.controller.**"/>

    <!-- 注解，json数据返回配置 -->
    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager"/>
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="false"/>
        <property name="favorParameter" value="false"/>
        <property name="ignoreAcceptHeader" value="false"/>
        <property name="mediaTypes">
            <value>
                atom=application/atom+xml
                html=text/html
                json=application/json
                *=*/*
            </value>
        </property>
    </bean>

    <!--
    拦截器配置：
     方法一：使用mvc:interceptors,在对应的拦截器中无法转换为HandlerMethod,提示有异常：cannot be cast to org.springframework.web.method.HandlerMethod
     方法二：配合RequestMappingHandlerMapping和RequestMappingHandlerAdapter使用，可以完成转换。
    -->
    <!--
    <mvc:interceptors>
        <bean class="com.acom.filter.LoginCheckInterceptor"/>
    </mvc:interceptors>
    -->
    <!-- 基于注解的拦截器 ********** 开始 -->
    <!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
         <property name="interceptors">
             <list>
                 <bean class="com.acom.filter.LoginCheckInterceptor"/>
             </list>
         </property>
     </bean>-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>-->

    <!-- 拦截器配置 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
    <mvc:interceptors>
        <mvc:interceptor>
            <!-- 拦截所有 -->
            <mvc:mapping path="/**"/>
            <!-- 排除如下的内容 -->
            <mvc:exclude-mapping path="/**/*.css"/>
            <mvc:exclude-mapping path="/**/*.js"/>
            <mvc:exclude-mapping path="/**/*.png"/>
            <mvc:exclude-mapping path="/**/*.jpg"/>
            <mvc:exclude-mapping path="/**/*.jpeg"/>
            <mvc:exclude-mapping path="/**/*.eot"/>
            <mvc:exclude-mapping path="/**/*.svg"/>
            <mvc:exclude-mapping path="/**/*.ttf"/>
            <mvc:exclude-mapping path="/**/*.woff"/>
            <mvc:exclude-mapping path="/**/*.woff2"/>
            <mvc:exclude-mapping path="/**/*.map"/>
            <bean class="com.acom.filter.LoginCheckInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- 基于注解的拦截器 ********** 结束 -->

    <!-- 配置SpringMVC的视图解析器，视图的位置，以及尾缀 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 不建议加二级目录名称，否则jsp和freemarker容易混淆 -->
        <property name="viewClass" value="org.springframework.web.servlet.view.InternalResourceView"/>
        <property name="prefix" value="/WEB-INF/pages/jsp/"/>
        <property name="suffix" value=".jsp"/>
        <property name="order" value="1"/>
    </bean>

    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <!-- 不建议加二级目录名称，否则jsp和freemarker容易混淆 -->
        <property name="templateLoaderPath" value="/WEB-INF/pages/ftl/"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">0</prop>
                <prop key="default_encoding">UTF-8</prop>
                <prop key="number_format">0.##########</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="classic_compatible">true</prop>
                <prop key="template_exception_handler">ignore</prop>
            </props>
        </property>
        <property name="freemarkerVariables">
            <map>
                <entry key="xml_escape" value-ref="fmXmlEscape"/>
            </map>
        </property>
    </bean>

    <!-- freemarker视图解析器 -->
    <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
        <property name="suffix" value=".ftl"/>
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <!-- 此变量值为pageContext.request, 页面使用方法：rc.contextPath -->
        <property name="requestContextAttribute" value="rc"/>
        <property name="order" value="0"/>
    </bean>

    <bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/>

    <!-- spring启动初始化缓存 -->
    <bean name="initRedisCache" class="com.acom.cache.InitRedisCache"/>

    <mvc:resources mapping="/ui/**" location="/ui/" cache-period="0"/>

</beans>